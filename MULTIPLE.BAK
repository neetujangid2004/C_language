#include<graphics.h>
#include<conio.h>
#include<dos.h>

#define NUM_CIRCLES 5
#define DELAY_TIME 50

typedef struct {
	int x,y;
	int radius;
	int dx, dy;
	int color;
} Circle;

void initGraphics(){
	int gd = DETECT, gm;
	initgraph(&gd, &gm, "C:\\TURBOC3\\BGI");
}
void moveCircles(Circle circles[], int count){
	for(int i=0;i<count;i++){
		setcolor(BLACK);
		circle(circles[i].x, circles[i].y, circles[i].radius);
		floodfill(circles[i].x, circles[i].y, BLACK);

		circles[i].x += circles[i].dx;
		circles[i].y += circles[i].dy;

		if(circles[i].x - circles[i].radius <= 0 || circles[i].x + circles[i].radius >= getmaxx()){
			circles[i].dx = -circles[i].dx;
		}
		if(circles[i].y - circles[i].radius <= 0 || circles[i].y + circles[i].radius >= getmaxy()){
			circles[i].dy = -circles[i].dy;
		}

		setcolor(circles[i].color);
		circle(circles[i].x, circles[i].y, circles[i].color);
		floodfill(circles[i].x, circles[i].y, circles[i].color);
	}
}

int main(){
	Circle circles[NUM_CIRCLES] = {
		{100, 100, 20, 2, 2, RED},
		{200, 150, 30, -3, 2, GREEN},
		{300, 200, 25, 2, -3, BLUE},
		{400, 250, 35, -2, -2, YELLOW},
		{500, 300, 20, 3, 3, MAGENTA}
	};
	initGraphics();

	while(!kbhit()){
		moveCircles(circles, NUM_CIRCLES);
		delay(DELAY_TIME);
	}
	closegraph();
	return 0;
}




